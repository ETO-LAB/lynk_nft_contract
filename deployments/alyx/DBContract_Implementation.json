{
  "address": "0xa5286411CdA8B774aee449dd6b488db3eEC28a28",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdtToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AP_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LISTED_LYNKNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LYNKNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LYNK_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MARKET",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_LYNKNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TEAM_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDT_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER_INFO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        }
      ],
      "name": "__DBContract_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptTokenLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "acceptTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "achievementRewardAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "achievementRewardAmountsNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "achievementRewardDurationThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "achievementRewardLevelThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "attributeLevelThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attributeLevelThresholdNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "attributeLevelThresholdNumByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum ILYNKNFT.Attribute",
          "name": "_attr",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_point",
          "type": "uint256"
        }
      ],
      "name": "calcLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "overflow",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "calcTokenLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IUser.Level",
          "name": "_level",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_invitationLevel",
          "type": "uint256"
        }
      ],
      "name": "communityRewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "communityRewardRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IUser.Level",
          "name": "_level",
          "type": "uint8"
        }
      ],
      "name": "communityRewardRatesNumByLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contributionRewardAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contributionRewardAmountsNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contributionRewardThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "directRequirements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "directRequirementsNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        }
      ],
      "name": "hasAchievementReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isAcceptToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxInvitationLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMintPerDayPerAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxVAAddPerDayPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mintPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintPricesNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "packageByIndex",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "packageLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "performanceRequirements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceRequirementsNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "removeAcceptToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rootAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellingLevelLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sellingPackages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_acceptToken",
          "type": "address"
        }
      ],
      "name": "setAcceptToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "setAchievementRewardAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_achievementRewardDurationThreshold",
          "type": "uint256"
        }
      ],
      "name": "setAchievementRewardDurationThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_achievementRewardLevelThreshold",
          "type": "uint256"
        }
      ],
      "name": "setAchievementRewardLevelThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        }
      ],
      "name": "setAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum ILYNKNFT.Attribute",
          "name": "_attr",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "_thresholds",
          "type": "uint256[]"
        }
      ],
      "name": "setAttributeLevelThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseTokenURI",
          "type": "string"
        }
      ],
      "name": "setBaseTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IUser.Level",
          "name": "_level",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "_rates",
          "type": "uint256[]"
        }
      ],
      "name": "setCommunityRewardRates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "setContributionRewardAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_contributionRewardThreshold",
          "type": "uint256"
        }
      ],
      "name": "setContributionRewardThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_requirements",
          "type": "uint256[]"
        }
      ],
      "name": "setDirectRequirements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxMintPerDayPerAddress",
          "type": "uint256"
        }
      ],
      "name": "setMaxMintPerDayPerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxVAAddPerDayPerToken",
          "type": "uint256"
        }
      ],
      "name": "setMaxVAAddPerDayPerToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_mintPrices",
          "type": "uint256[]"
        }
      ],
      "name": "setMintPrices",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_requirements",
          "type": "uint256[]"
        }
      ],
      "name": "setPerformanceRequirements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rootAddress",
          "type": "address"
        }
      ],
      "name": "setRootAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sellingLevelLimit",
          "type": "uint256"
        }
      ],
      "name": "setSellingLevelLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[][]",
          "name": "_packages",
          "type": "uint256[][]"
        }
      ],
      "name": "setSellingPackage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_rates",
          "type": "uint256[]"
        }
      ],
      "name": "setSocialRewardRates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tradingFee",
          "type": "uint256"
        }
      ],
      "name": "setTradingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "socialRewardRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "socialRewardRatesNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf7710b66f17dfb20ab03c77062f1a12938cc312ba140d10bb3d34dceb0d535f1",
  "receipt": {
    "to": null,
    "from": "0xAc9f45308C0f52aD3B660E67f1e3fa05fc812531",
    "contractAddress": "0xa5286411CdA8B774aee449dd6b488db3eEC28a28",
    "transactionIndex": 0,
    "gasUsed": "2285950",
    "logsBloom": "0x
    "blockHash": "0x397b8ee12b4016608d025734e5e780aa8f8e6f1a3cf17544c21400445a001977",
    "transactionHash": "0xf7710b66f17dfb20ab03c77062f1a12938cc312ba140d10bb3d34dceb0d535f1",
    "logs": [],
    "blockNumber": 262478,
    "cumulativeGasUsed": "2285950",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x38B7CA6eD821bEf464Aa1BF080bf563efc0DEc1a"
  ],
  "numDeployments": 2,
  "solcInputHash": "778801f3ac96f3722938a868c0900280",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AP_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LISTED_LYNKNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LYNKNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LYNK_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_LYNKNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEAM_ADDR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_INFO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"__DBContract_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptTokenLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"acceptTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"achievementRewardAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"achievementRewardAmountsNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"achievementRewardDurationThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"achievementRewardLevelThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"attributeLevelThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"attributeLevelThresholdNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"attributeLevelThresholdNumByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ILYNKNFT.Attribute\",\"name\":\"_attr\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_point\",\"type\":\"uint256\"}],\"name\":\"calcLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overflow\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"calcTokenLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IUser.Level\",\"name\":\"_level\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_invitationLevel\",\"type\":\"uint256\"}],\"name\":\"communityRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"communityRewardRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IUser.Level\",\"name\":\"_level\",\"type\":\"uint8\"}],\"name\":\"communityRewardRatesNumByLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contributionRewardAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contributionRewardAmountsNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contributionRewardThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"directRequirements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"directRequirementsNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"}],\"name\":\"hasAchievementReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isAcceptToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxInvitationLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMintPerDayPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxVAAddPerDayPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mintPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPricesNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"packageByIndex\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"packageLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"performanceRequirements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performanceRequirementsNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeAcceptToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingLevelLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sellingPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_acceptToken\",\"type\":\"address\"}],\"name\":\"setAcceptToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"setAchievementRewardAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_achievementRewardDurationThreshold\",\"type\":\"uint256\"}],\"name\":\"setAchievementRewardDurationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_achievementRewardLevelThreshold\",\"type\":\"uint256\"}],\"name\":\"setAchievementRewardLevelThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"setAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ILYNKNFT.Attribute\",\"name\":\"_attr\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"_thresholds\",\"type\":\"uint256[]\"}],\"name\":\"setAttributeLevelThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IUser.Level\",\"name\":\"_level\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"_rates\",\"type\":\"uint256[]\"}],\"name\":\"setCommunityRewardRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"setContributionRewardAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contributionRewardThreshold\",\"type\":\"uint256\"}],\"name\":\"setContributionRewardThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_requirements\",\"type\":\"uint256[]\"}],\"name\":\"setDirectRequirements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxMintPerDayPerAddress\",\"type\":\"uint256\"}],\"name\":\"setMaxMintPerDayPerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxVAAddPerDayPerToken\",\"type\":\"uint256\"}],\"name\":\"setMaxVAAddPerDayPerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_mintPrices\",\"type\":\"uint256[]\"}],\"name\":\"setMintPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_requirements\",\"type\":\"uint256[]\"}],\"name\":\"setPerformanceRequirements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rootAddress\",\"type\":\"address\"}],\"name\":\"setRootAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sellingLevelLimit\",\"type\":\"uint256\"}],\"name\":\"setSellingLevelLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"_packages\",\"type\":\"uint256[][]\"}],\"name\":\"setSellingPackage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_rates\",\"type\":\"uint256[]\"}],\"name\":\"setSocialRewardRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tradingFee\",\"type\":\"uint256\"}],\"name\":\"setTradingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"socialRewardRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"socialRewardRatesNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setAttributeLevelThreshold(uint8,uint256[])\":{\"notice\":\"CA: [100, 500, 1000 ... ]\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DBContract.sol\":\"DBContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/DBContract.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"./interfaces/IUser.sol\\\";\\nimport \\\"./interfaces/ILYNKNFT.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract DBContract is OwnableUpgradeable {\\n\\n    /**************************************************************************\\n     *****  Common fields  ****************************************************\\n     **************************************************************************/\\n    address immutable public USDT_TOKEN;\\n\\n    address public LYNK_TOKEN;\\n    address public AP_TOKEN;\\n    address public STAKING;\\n    address public USER_INFO;\\n    address public LYNKNFT;\\n    address public STAKING_LYNKNFT;\\n    address public LISTED_LYNKNFT;\\n    address public MARKET;\\n    address public TEAM_ADDR;\\n    address public operator;\\n\\n    /**************************************************************************\\n     *****  AlynNFT fields  ***************************************************\\n     **************************************************************************/\\n    uint256[] public mintPrices;\\n    uint256 public maxMintPerDayPerAddress;\\n    string public baseTokenURI;\\n    uint256[][] public attributeLevelThreshold;\\n    uint256 public maxVAAddPerDayPerToken;\\n\\n    /**************************************************************************\\n     *****  Market fields  ****************************************************\\n     **************************************************************************/\\n    address[] public acceptTokens;\\n    uint256 public sellingLevelLimit;\\n    uint256 public tradingFee;\\n\\n    /**************************************************************************\\n     *****  User fields  ******************************************************\\n     **************************************************************************/\\n    address public rootAddress;\\n    uint256[] public directRequirements;\\n    uint256[] public performanceRequirements;\\n    uint256[] public socialRewardRates;\\n    uint256 public contributionRewardThreshold;\\n    uint256[] public contributionRewardAmounts;\\n    uint256 public maxInvitationLevel;\\n    mapping(uint256 => uint256[]) public communityRewardRates;\\n    uint256 public achievementRewardLevelThreshold;\\n    uint256 public achievementRewardDurationThreshold;\\n    uint256[] public achievementRewardAmounts;\\n\\n    /**************************************************************************\\n     *****  APToken fields  ***************************************************\\n     **************************************************************************/\\n    uint256[][] public sellingPackages;\\n\\n    uint256 public duration;\\n\\n    /**\\n     * @dev Throws if called by any account other than the operator.\\n     */\\n    modifier onlyOperator() {\\n        require(operator == _msgSender(), \\\"DBContract: caller is not the operator\\\");\\n        _;\\n    }\\n\\n    constructor(address _usdtToken) {\\n        USDT_TOKEN = _usdtToken;\\n    }\\n\\n    function __DBContract_init(address[] calldata _addresses) public initializer {\\n        __DBContract_init_unchained(_addresses);\\n        __Ownable_init();\\n    }\\n\\n    function __DBContract_init_unchained(address[] calldata _addresses) private {\\n        _setAddresses(_addresses);\\n    }\\n\\n    function setOperator(address _operator) external onlyOwner {\\n        operator = _operator;\\n    }\\n\\n    function setAddresses(address[] calldata _addresses) external onlyOperator {\\n        _setAddresses(_addresses);\\n    }\\n\\n\\n    /**************************************************************************\\n     *****  AlynNFT Manager  **************************************************\\n     **************************************************************************/\\n    function setMintPrices(uint256[] calldata _mintPrices) external onlyOperator {\\n        require(_mintPrices.length == 3, 'DBContract: length mismatch.');\\n        delete mintPrices;\\n\\n        mintPrices = _mintPrices;\\n    }\\n\\n    function setMaxMintPerDayPerAddress(uint256 _maxMintPerDayPerAddress) external onlyOperator {\\n        maxMintPerDayPerAddress = _maxMintPerDayPerAddress;\\n    }\\n\\n    function setBaseTokenURI(string calldata _baseTokenURI) external onlyOperator {\\n        baseTokenURI = _baseTokenURI;\\n    }\\n\\n    /**\\n     * CA: [100, 500, 1000 ... ]\\n     */\\n    function setAttributeLevelThreshold(ILYNKNFT.Attribute _attr, uint256[] calldata _thresholds) external onlyOperator {\\n        require(uint256(_attr) <= attributeLevelThreshold.length, 'DBContract: length mismatch.');\\n\\n        for (uint256 index; index < _thresholds.length; index++) {\\n            if (index > 0) {\\n                require(_thresholds[index] >= _thresholds[index - 1], 'DBContract: invalid thresholds.');\\n            }\\n        }\\n\\n        if (attributeLevelThreshold.length == uint256(_attr)) {\\n            attributeLevelThreshold.push(_thresholds);\\n        } else {\\n            delete attributeLevelThreshold[uint256(_attr)];\\n            attributeLevelThreshold[uint256(_attr)] = _thresholds;\\n        }\\n    }\\n\\n    function setMaxVAAddPerDayPerToken(uint256 _maxVAAddPerDayPerToken) external onlyOperator {\\n        maxVAAddPerDayPerToken = _maxVAAddPerDayPerToken;\\n    }\\n\\n    /**************************************************************************\\n     *****  Market Manager  ***************************************************\\n     **************************************************************************/\\n    function setAcceptToken(address _acceptToken) external onlyOperator {\\n        uint256 wlLength = acceptTokens.length;\\n        for (uint256 index; index < wlLength; index++) {\\n            if (_acceptToken == acceptTokens[index]) return;\\n        }\\n\\n        acceptTokens.push(_acceptToken);\\n    }\\n\\n    function removeAcceptToken(uint256 _index) external onlyOperator {\\n        uint256 wlLength = acceptTokens.length;\\n        if (_index < acceptTokens.length - 1)\\n            acceptTokens[_index] = acceptTokens[wlLength - 1];\\n        acceptTokens.pop();\\n    }\\n\\n    function setSellingLevelLimit(uint256 _sellingLevelLimit) external onlyOperator {\\n        sellingLevelLimit = _sellingLevelLimit;\\n    }\\n\\n    // e.g. 100% = 1e18\\n    function setTradingFee(uint256 _tradingFee) external onlyOperator {\\n        require(_tradingFee <= 1e18, 'DBContract: too large.');\\n        tradingFee = _tradingFee;\\n    }\\n\\n    /**************************************************************************\\n     *****  User Manager  *****************************************************\\n     **************************************************************************/\\n    function setRootAddress(address _rootAddress) external onlyOperator {\\n        require(_rootAddress != address(0), 'DBContract: root cannot be zero address.');\\n\\n        rootAddress = _rootAddress;\\n    }\\n\\n    function setDirectRequirements(uint256[] calldata _requirements) external onlyOperator {\\n        require(_requirements.length == uint256(type(IUser.Level).max), 'DBContract: length mismatch.');\\n\\n        delete directRequirements;\\n        directRequirements = _requirements;\\n    }\\n\\n    function setPerformanceRequirements(uint256[] calldata _requirements) external onlyOperator {\\n        require(_requirements.length == uint256(type(IUser.Level).max), 'DBContract: length mismatch.');\\n\\n        delete performanceRequirements;\\n        performanceRequirements = _requirements;\\n    }\\n\\n    // e.g. 100% = 1e18\\n    function setSocialRewardRates(uint256[] calldata _rates) external onlyOperator {\\n        require(_rates.length == uint256(type(IUser.Level).max) + 1, 'DBContract: length mismatch.');\\n\\n        delete socialRewardRates;\\n        for (uint256 index; index < _rates.length; index++) {\\n            require(_rates[index] <= 1e18, 'DBContract: too large.');\\n        }\\n\\n        socialRewardRates = _rates;\\n    }\\n\\n    function setContributionRewardThreshold(uint256 _contributionRewardThreshold) external onlyOperator {\\n        contributionRewardThreshold = _contributionRewardThreshold;\\n    }\\n\\n    function setContributionRewardAmounts(uint256[] calldata _amounts) external onlyOperator {\\n        require(_amounts.length == uint256(type(IUser.Level).max) + 1, 'DBContract: length mismatch.');\\n\\n        delete contributionRewardAmounts;\\n        contributionRewardAmounts = _amounts;\\n    }\\n\\n    function setCommunityRewardRates(IUser.Level _level, uint256[] calldata _rates) external onlyOperator {\\n        uint256 levelUint = uint256(_level);\\n\\n        delete communityRewardRates[levelUint];\\n\\n        if (_rates.length > maxInvitationLevel) {\\n            maxInvitationLevel = _rates.length;\\n        }\\n        communityRewardRates[levelUint] = _rates;\\n    }\\n\\n    function setAchievementRewardDurationThreshold(uint256 _achievementRewardDurationThreshold) external onlyOperator {\\n        achievementRewardDurationThreshold = _achievementRewardDurationThreshold;\\n    }\\n\\n    function setAchievementRewardLevelThreshold(uint256 _achievementRewardLevelThreshold) external onlyOperator {\\n        achievementRewardLevelThreshold = _achievementRewardLevelThreshold;\\n    }\\n\\n    function setAchievementRewardAmounts(uint256[] calldata _amounts) external onlyOperator {\\n        require(_amounts.length == uint256(type(IUser.Level).max) + 1, 'DBContract: length mismatch.');\\n\\n        delete achievementRewardAmounts;\\n        achievementRewardAmounts = _amounts;\\n    }\\n\\n    /**************************************************************************\\n     *****  APToken Manager  **************************************************\\n     **************************************************************************/\\n    function setSellingPackage(uint256[][] calldata _packages) external onlyOperator {\\n        delete sellingPackages;\\n\\n        for (uint256 index; index < _packages.length; index++) {\\n            require(_packages[index].length == 3, 'DBContract: length mismatch.');\\n\\n            sellingPackages.push(_packages[index]);\\n        }\\n    }\\n\\n    function setDuration(uint256 _duration) external onlyOperator {\\n        duration = _duration;\\n    }\\n\\n    /**************************************************************************\\n     *****  public view  ******************************************************\\n     **************************************************************************/\\n    function calcTokenLevel(uint256 _tokenId) external view returns (uint256 level) {\\n        return _calcTokenLevel(_tokenId);\\n    }\\n\\n    function calcLevel(ILYNKNFT.Attribute _attr, uint256 _point) external view returns (uint256 level, uint256 overflow) {\\n        return _calcLevel(_attr, _point);\\n    }\\n\\n    function acceptTokenLength() external view returns (uint256) {\\n        return acceptTokens.length;\\n    }\\n\\n    function isAcceptToken(address _token) external view returns (bool) {\\n        uint256 wlLength = acceptTokens.length;\\n        for (uint256 index; index < wlLength; index++) {\\n            if (_token == acceptTokens[index]) return true;\\n        }\\n\\n        return false;\\n    }\\n\\n    function packageLength() external view returns (uint256) {\\n        return sellingPackages.length;\\n    }\\n\\n    function packageByIndex(uint256 _index) external view returns (uint256[] memory) {\\n        require(_index < sellingPackages.length, 'DBContract: index out of bounds.');\\n\\n        return sellingPackages[_index];\\n    }\\n\\n    function communityRewardRate(IUser.Level _level, uint256 _invitationLevel) external view returns (uint256) {\\n        if (communityRewardRates[uint256(_level)].length > _invitationLevel) {\\n            return communityRewardRates[uint256(_level)][_invitationLevel];\\n        }\\n\\n        return 0;\\n    }\\n\\n    function hasAchievementReward(uint256 _nftId) external view returns (bool) {\\n        return _calcTokenLevel(_nftId) >= achievementRewardLevelThreshold;\\n    }\\n\\n    function _calcTokenLevel(uint256 _tokenId) private view returns (uint256 level) {\\n        require(ILYNKNFT(LYNKNFT).exists(_tokenId), 'DBContract: invalid token ID.');\\n\\n        uint256[] memory _nftInfo = ILYNKNFT(LYNKNFT).nftInfoOf(_tokenId);\\n        for (uint256 index; index < uint256(type(ILYNKNFT.Attribute).max) + 1; index++) {\\n            (uint256 levelSingleAttr,) = _calcLevel(ILYNKNFT.Attribute(index), _nftInfo[index]);\\n            if (index == 0 || levelSingleAttr < level) {\\n                level = levelSingleAttr;\\n            }\\n        }\\n\\n        return level;\\n    }\\n\\n    function _calcLevel(ILYNKNFT.Attribute _attr, uint256 _point) private view returns (uint256 level, uint256 overflow) {\\n        level = 0;\\n        overflow = _point;\\n        uint256 thresholdLength = attributeLevelThreshold[uint256(_attr)].length;\\n        for (uint256 index; index < thresholdLength; index++) {\\n            if (_point >= attributeLevelThreshold[uint256(_attr)][index]) {\\n                level = index + 1;\\n                overflow = _point - attributeLevelThreshold[uint256(_attr)][index];\\n            } else {\\n                break;\\n            }\\n        }\\n        return (level, overflow);\\n    }\\n\\n    function _setAddresses(address[] calldata _addresses) private {\\n        require(_addresses.length == 9, 'DBContract: addresses length mismatch.');\\n\\n        LYNK_TOKEN          = _addresses[0];\\n        AP_TOKEN            = _addresses[1];\\n        STAKING             = _addresses[2];\\n        LYNKNFT             = _addresses[3];\\n        STAKING_LYNKNFT     = _addresses[4];\\n        LISTED_LYNKNFT      = _addresses[5];\\n        MARKET              = _addresses[6];\\n        USER_INFO           = _addresses[7];\\n        TEAM_ADDR           = _addresses[8];\\n    }\\n\\n    function mintPricesNum() external view returns (uint256) {\\n        return mintPrices.length;\\n    }\\n\\n    function attributeLevelThresholdNum() external view returns (uint256) {\\n        return attributeLevelThreshold.length;\\n    }\\n\\n    function attributeLevelThresholdNumByIndex(uint256 index) external view returns (uint256) {\\n        return attributeLevelThreshold.length > index ? attributeLevelThreshold[index].length : 0;\\n    }\\n\\n    function directRequirementsNum() external view returns (uint256) {\\n        return directRequirements.length;\\n    }\\n\\n    function performanceRequirementsNum() external view returns (uint256) {\\n        return performanceRequirements.length;\\n    }\\n\\n    function socialRewardRatesNum() external view returns (uint256) {\\n        return socialRewardRates.length;\\n    }\\n\\n    function contributionRewardAmountsNum() external view returns (uint256) {\\n        return contributionRewardAmounts.length;\\n    }\\n\\n    function communityRewardRatesNumByLevel(IUser.Level _level) external view returns (uint256) {\\n        return communityRewardRates[uint256(_level)].length;\\n    }\\n\\n    function achievementRewardAmountsNum() external view returns (uint256) {\\n        return achievementRewardAmounts.length;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xa65b50df6ddfccb5c9b187a045e7037fc231236c931afc4d609951fa477973d0\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ILYNKNFT.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\ninterface ILYNKNFT {\\n\\n    enum Attribute {\\n        charisma,\\n        vitality,\\n        intellect,\\n        dexterity\\n    }\\n\\n    function nftInfoOf(uint256 tokenId)\\n        external\\n        view\\n        returns (uint256[] memory _nftInfo);\\n\\n    function exists(uint256 tokenId) external view returns (bool);\\n\\n}\",\"keccak256\":\"0xa6d8e1bbde089ce45418fe93057bb5caf0be6d543a88f28d8bb8d2fd69db5253\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IUser.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\ninterface IUser {\\n\\n    enum Level {\\n        elite,\\n        epic,\\n        master,\\n        legendary,\\n        mythic,\\n        divine\\n    }\\n\\n    function isValidUser(address _userAddr) view external returns (bool);\\n\\n    function hookByUpgrade(address _userAddr, uint256 _performance) external;\\n    function hookByClaimReward(address _userAddr, uint256 _rewardAmount) external;\\n    function hookByStake(uint256 nftId) external;\\n    function hookByUnStake(uint256 nftId) external;\\n\\n}\",\"keccak256\":\"0xb440888ec098bb4ce823deee6e15785f161bce18fd96120edfc2507e78d80028\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620028ee380380620028ee833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b60805161285a620000946000396000610685015261285a6000f3fe608060405234801561001057600080fd5b50600436106104545760003560e01c80638136673f11610241578063c2e30dd01161013b578063d547cfb7116100c3578063f46f16c211610087578063f46f16c214610954578063f6be71d114610967578063fa1785fe1461097a578063fce3b86e1461098d578063fd02f81f146109a057600080fd5b8063d547cfb7146108fe578063e707379014610913578063ec214bbf14610926578063f046bded14610939578063f2fde38b1461094157600080fd5b8063cd0a174a1161010a578063cd0a174a1461089d578063d2110a09146108bd578063d3f0f70d146108c5578063d3f42b7c146108d8578063d42ecfc0146108eb57600080fd5b8063c2e30dd014610851578063c6c0891614610864578063c7650dd814610877578063c8aca9d01461088a57600080fd5b8063aaa2b8c8116101c9578063b2cd99af1161018d578063b2cd99af146107dd578063b3a8f2a914610805578063b3ab15fb14610818578063b589e51e1461082b578063b95717211461083e57600080fd5b8063aaa2b8c814610788578063af4574c61461079b578063af718c55146107ae578063afe97ec1146107c1578063b0d54bcf146107ca57600080fd5b806399bcfdd31161021057806399bcfdd3146107335780639ba544ed146107465780639d51193e146107595780639e77de2714610762578063a5c158e31461077557600080fd5b80638136673f146106e95780638da5cb5b146106fc5780638edcde7d1461070d57806397610f301461072057600080fd5b806356f43352116103525780636b81ffdb116102da57806377b330c91161029e57806377b330c9146106805780637811dddd146106a75780637a58a3f1146106b05780637af35899146106c35780637bbbdc2e146106d657600080fd5b80636b81ffdb146106365780636fda065214610649578063705064fd1461065c578063715018a61461066f57806377b2fb8e1461067757600080fd5b80635f7d59c4116103215780635f7d59c4146105f6578063600a2f82146105ff5780636187b33e146106085780636241c2001461061b578063663d2c4e1461062357600080fd5b806356f43352146105b4578063570ca735146105bd5780635b487d9c146105d05780635ce58dd4146105e357600080fd5b8063331163ce116103e05780634d678f29116103a45780634d678f291461056a5780634eb66e831461057d578063530009641461058657806354af93201461058e57806356c15c39146105a157600080fd5b8063331163ce146105165780633b87436b1461051e57806341d0992b1461053157806343e573b1146105445780634b89f9f71461055757600080fd5b80631edd6e87116104275780631edd6e87146104c85780631faee868146104d05780632eed8a59146104d857806330176e13146104fb5780633256e7d41461050e57600080fd5b80630b00fd54146104595780630fb5a6b4146104895780631451952b146104a05780631b56c29c146104b5575b600080fd5b606d5461046c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61049260835481565b604051908152602001610480565b6104b36104ae36600461224d565b6109a8565b005b61046c6104c336600461227d565b610a64565b607454610492565b608254610492565b6104eb6104e636600461224d565b610a8e565b6040519015158152602001610480565b6104b3610509366004612296565b610af6565b607a54610492565b606f54610492565b60655461046c906001600160a01b031681565b6104b361053f36600461234d565b610b31565b6104b361055236600461224d565b610b9d565b6104b36105653660046123a3565b610c6f565b610492610578366004612405565b610e4f565b610492607d5481565b607854610492565b6104b361059c36600461234d565b610ed0565b606b5461046c906001600160a01b031681565b61049260765481565b606e5461046c906001600160a01b031681565b606a5461046c906001600160a01b031681565b6104b36105f136600461234d565b610f32565b61049260735481565b61049260705481565b61049261061636600461227d565b611025565b607954610492565b60695461046c906001600160a01b031681565b6104b361064436600461227d565b611046565b61049261065736600461227d565b611075565b6104b361066a36600461227d565b6110ad565b6104b361119b565b610492607b5481565b61046c7f000000000000000000000000000000000000000000000000000000000000000081565b61049260805481565b6104926106be36600461227d565b6111af565b6104b36106d136600461234d565b6111bf565b6104b36106e436600461234d565b61122b565b6104926106f736600461242f565b611347565b6033546001600160a01b031661046c565b61049261071b36600461227d565b611384565b60675461046c906001600160a01b031681565b61049261074136600461227d565b61138f565b6104b361075436600461227d565b61139f565b610492607f5481565b6104b361077036600461234d565b6113ce565b6104b361078336600461227d565b611430565b60775461046c906001600160a01b031681565b6104926107a936600461227d565b61145f565b6104926107bc36600461242f565b61146f565b61049260755481565b6104b36107d836600461227d565b61147f565b6107f06107eb366004612451565b6114ff565b60408051928352602083019190915201610480565b6104b361081336600461227d565b611518565b6104b361082636600461224d565b611547565b6104b361083936600461234d565b611571565b6104b361084c36600461234d565b6115d3565b60665461046c906001600160a01b031681565b6104b361087236600461227d565b61160b565b6104b361088536600461234d565b61163a565b61049261089836600461242f565b611717565b6108b06108ab36600461227d565b611733565b604051610480919061246d565b607c54610492565b6104eb6108d336600461227d565b6117fa565b6104926108e636600461227d565b611810565b6104b36108f936600461227d565b611820565b61090661184f565b60405161048091906124b1565b6104b3610921366004612506565b6118dd565b610492610934366004612524565b611966565b607254610492565b6104b361094f36600461224d565b611995565b606c5461046c906001600160a01b031681565b6104b361097536600461227d565b611a0b565b60685461046c906001600160a01b031681565b61049261099b36600461227d565b611a3a565b608154610492565b606e546001600160a01b031633146109db5760405162461bcd60e51b81526004016109d29061253f565b60405180910390fd5b6001600160a01b038116610a425760405162461bcd60e51b815260206004820152602860248201527f4442436f6e74726163743a20726f6f742063616e6e6f74206265207a65726f2060448201526730b2323932b9b99760c11b60648201526084016109d2565b607780546001600160a01b0319166001600160a01b0392909216919091179055565b60748181548110610a7457600080fd5b6000918252602090912001546001600160a01b0316905081565b607454600090815b81811015610aec5760748181548110610ab157610ab1612585565b6000918252602090912001546001600160a01b0385811691161415610ada575060019392505050565b80610ae4816125b1565b915050610a96565b5060009392505050565b606e546001600160a01b03163314610b205760405162461bcd60e51b81526004016109d29061253f565b610b2c60718383612121565b505050565b606e546001600160a01b03163314610b5b5760405162461bcd60e51b81526004016109d29061253f565b610b67600560016125e2565b8114610b855760405162461bcd60e51b81526004016109d2906125fa565b610b91607c60006121a5565b610b2c607c83836121c3565b606e546001600160a01b03163314610bc75760405162461bcd60e51b81526004016109d29061253f565b60745460005b81811015610c1e5760748181548110610be857610be8612585565b6000918252602090912001546001600160a01b0384811691161415610c0c57505050565b80610c16816125b1565b915050610bcd565b5050607480546001810182556000919091527f19a0b39aa25ac793b5f6e9a0534364cc0b3fd1ea9b651e79c7f50a59d48ef8130180546001600160a01b0319166001600160a01b0383161790555b50565b606e546001600160a01b03163314610c995760405162461bcd60e51b81526004016109d29061253f565b607254836003811115610cae57610cae6125cc565b1115610ccc5760405162461bcd60e51b81526004016109d2906125fa565b60005b81811015610d79578015610d67578282610cea600184612631565b818110610cf957610cf9612585565b90506020020135838383818110610d1257610d12612585565b905060200201351015610d675760405162461bcd60e51b815260206004820152601f60248201527f4442436f6e74726163743a20696e76616c6964207468726573686f6c64732e0060448201526064016109d2565b80610d71816125b1565b915050610ccf565b50826003811115610d8c57610d8c6125cc565b6072541415610dd85760728054600181018255600091909152610dd2907fdffbd64cc7c1a7eb27984335d9416d51137a03d3fabec7141025c62663253fe10183836121c3565b50505050565b6072836003811115610dec57610dec6125cc565b81548110610dfc57610dfc612585565b906000526020600020016000610e1291906121a5565b81816072856003811115610e2857610e286125cc565b81548110610e3857610e38612585565b906000526020600020019190610dd29291906121c3565b600081607e6000856005811115610e6857610e686125cc565b81526020810191909152604001600020541115610ec657607e6000846005811115610e9557610e956125cc565b81526020019081526020016000208281548110610eb457610eb4612585565b90600052602060002001549050610eca565b5060005b92915050565b606e546001600160a01b03163314610efa5760405162461bcd60e51b81526004016109d29061253f565b60058114610f1a5760405162461bcd60e51b81526004016109d2906125fa565b610f26607960006121a5565b610b2c607983836121c3565b606e546001600160a01b03163314610f5c5760405162461bcd60e51b81526004016109d29061253f565b610f68600560016125e2565b8114610f865760405162461bcd60e51b81526004016109d2906125fa565b610f92607a60006121a5565b60005b8181101561101857670de0b6b3a7640000838383818110610fb857610fb8612585565b9050602002013511156110065760405162461bcd60e51b8152602060048201526016602482015275222121b7b73a3930b1ba1d103a37b7903630b933b29760511b60448201526064016109d2565b80611010816125b1565b915050610f95565b50610b2c607a83836121c3565b606f818154811061103557600080fd5b600091825260209091200154905081565b606e546001600160a01b031633146110705760405162461bcd60e51b81526004016109d29061253f565b607b55565b6072546000908210611088576000610eca565b6072828154811061109b5761109b612585565b60009182526020909120015492915050565b606e546001600160a01b031633146110d75760405162461bcd60e51b81526004016109d29061253f565b6074546110e5600182612631565b8210156111645760746110f9600183612631565b8154811061110957611109612585565b600091825260209091200154607480546001600160a01b03909216918490811061113557611135612585565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b607480548061117557611175612648565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b6111a3611a4a565b6111ad6000611aa4565b565b607a818154811061103557600080fd5b606e546001600160a01b031633146111e95760405162461bcd60e51b81526004016109d29061253f565b6111f5600560016125e2565b81146112135760405162461bcd60e51b81526004016109d2906125fa565b61121f608160006121a5565b610b2c608183836121c3565b600054610100900460ff161580801561124b5750600054600160ff909116105b806112655750303b158015611265575060005460ff166001145b6112c85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109d2565b6000805460ff1916600117905580156112eb576000805461ff0019166101001790555b6112f583836115fd565b6112fd611af6565b8015610b2c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6072828154811061135757600080fd5b90600052602060002001818154811061136f57600080fd5b90600052602060002001600091509150505481565b6000610eca82611b25565b6078818154811061103557600080fd5b606e546001600160a01b031633146113c95760405162461bcd60e51b81526004016109d29061253f565b607f55565b606e546001600160a01b031633146113f85760405162461bcd60e51b81526004016109d29061253f565b600581146114185760405162461bcd60e51b81526004016109d2906125fa565b611424607860006121a5565b610b2c607883836121c3565b606e546001600160a01b0316331461145a5760405162461bcd60e51b81526004016109d29061253f565b607555565b6081818154811061103557600080fd5b6082828154811061135757600080fd5b606e546001600160a01b031633146114a95760405162461bcd60e51b81526004016109d29061253f565b670de0b6b3a76400008111156114fa5760405162461bcd60e51b8152602060048201526016602482015275222121b7b73a3930b1ba1d103a37b7903630b933b29760511b60448201526064016109d2565b607655565b60008061150c8484611cef565b915091505b9250929050565b606e546001600160a01b031633146115425760405162461bcd60e51b81526004016109d29061253f565b607055565b61154f611a4a565b606e80546001600160a01b0319166001600160a01b0392909216919091179055565b606e546001600160a01b0316331461159b5760405162461bcd60e51b81526004016109d29061253f565b600381146115bb5760405162461bcd60e51b81526004016109d2906125fa565b6115c7606f60006121a5565b610b2c606f83836121c3565b606e546001600160a01b031633146115fd5760405162461bcd60e51b81526004016109d29061253f565b6116078282611e06565b5050565b606e546001600160a01b031633146116355760405162461bcd60e51b81526004016109d29061253f565b607355565b606e546001600160a01b031633146116645760405162461bcd60e51b81526004016109d29061253f565b611670608260006121fd565b60005b81811015610b2c5782828281811061168d5761168d612585565b905060200281019061169f919061265e565b90506003146116c05760405162461bcd60e51b81526004016109d2906125fa565b60828383838181106116d4576116d4612585565b90506020028101906116e6919061265e565b825460018101845560009384526020909320611704930191906121c3565b508061170f816125b1565b915050611673565b607e602052816000526040600020818154811061136f57600080fd5b60825460609082106117875760405162461bcd60e51b815260206004820181905260248201527f4442436f6e74726163743a20696e646578206f7574206f6620626f756e64732e60448201526064016109d2565b6082828154811061179a5761179a612585565b906000526020600020018054806020026020016040519081016040528092919081815260200182805480156117ee57602002820191906000526020600020905b8154815260200190600101908083116117da575b50505050509050919050565b6000607f5461180883611b25565b101592915050565b6079818154811061103557600080fd5b606e546001600160a01b0316331461184a5760405162461bcd60e51b81526004016109d29061253f565b608055565b6071805461185c906126a8565b80601f0160208091040260200160405190810160405280929190818152602001828054611888906126a8565b80156118d55780601f106118aa576101008083540402835291602001916118d5565b820191906000526020600020905b8154815290600101906020018083116118b857829003601f168201915b505050505081565b606e546001600160a01b031633146119075760405162461bcd60e51b81526004016109d29061253f565b600083600581111561191b5761191b6125cc565b6000818152607e6020526040812091925061193691906121a5565b607d5482111561194657607d8290555b6000818152607e6020526040902061195f9084846121c3565b5050505050565b6000607e600083600581111561197e5761197e6125cc565b815260208101919091526040016000205492915050565b61199d611a4a565b6001600160a01b038116611a025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109d2565b610c6c81611aa4565b606e546001600160a01b03163314611a355760405162461bcd60e51b81526004016109d29061253f565b608355565b607c818154811061103557600080fd5b6033546001600160a01b031633146111ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109d2565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611b1d5760405162461bcd60e51b81526004016109d2906126e3565b6111ad6120f1565b606954604051634f558e7960e01b8152600481018390526000916001600160a01b031690634f558e799060240160206040518083038186803b158015611b6a57600080fd5b505afa158015611b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba2919061272e565b611bee5760405162461bcd60e51b815260206004820152601d60248201527f4442436f6e74726163743a20696e76616c696420746f6b656e2049442e00000060448201526064016109d2565b60695460405163373bf3af60e21b8152600481018490526000916001600160a01b03169063dcefcebc9060240160006040518083038186803b158015611c3357600080fd5b505afa158015611c47573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c6f9190810190612766565b905060005b611c80600360016125e2565b811015611ce8576000611cbd826003811115611c9e57611c9e6125cc565b848481518110611cb057611cb0612585565b6020026020010151611cef565b509050811580611ccc57508381105b15611cd5578093505b5080611ce0816125b1565b915050611c74565b5050919050565b600081816072856003811115611d0757611d076125cc565b81548110611d1757611d17612585565b600091825260208220015491505b81811015611dfd576072866003811115611d4157611d416125cc565b81548110611d5157611d51612585565b906000526020600020018181548110611d6c57611d6c612585565b90600052602060002001548510611de657611d888160016125e2565b93506072866003811115611d9e57611d9e6125cc565b81548110611dae57611dae612585565b906000526020600020018181548110611dc957611dc9612585565b906000526020600020015485611ddf9190612631565b9250611deb565b611dfd565b80611df5816125b1565b915050611d25565b50509250929050565b60098114611e655760405162461bcd60e51b815260206004820152602660248201527f4442436f6e74726163743a20616464726573736573206c656e677468206d697360448201526536b0ba31b41760d11b60648201526084016109d2565b81816000818110611e7857611e78612585565b9050602002016020810190611e8d919061224d565b606580546001600160a01b0319166001600160a01b039290921691909117905581816001818110611ec057611ec0612585565b9050602002016020810190611ed5919061224d565b606680546001600160a01b0319166001600160a01b039290921691909117905581816002818110611f0857611f08612585565b9050602002016020810190611f1d919061224d565b606780546001600160a01b0319166001600160a01b039290921691909117905581816003818110611f5057611f50612585565b9050602002016020810190611f65919061224d565b606980546001600160a01b0319166001600160a01b039290921691909117905581816004818110611f9857611f98612585565b9050602002016020810190611fad919061224d565b606a80546001600160a01b0319166001600160a01b039290921691909117905581816005818110611fe057611fe0612585565b9050602002016020810190611ff5919061224d565b606b80546001600160a01b0319166001600160a01b03929092169190911790558181600681811061202857612028612585565b905060200201602081019061203d919061224d565b606c80546001600160a01b0319166001600160a01b03929092169190911790558181600781811061207057612070612585565b9050602002016020810190612085919061224d565b606880546001600160a01b0319166001600160a01b0392909216919091179055818160088181106120b8576120b8612585565b90506020020160208101906120cd919061224d565b606d80546001600160a01b0319166001600160a01b03929092169190911790555050565b600054610100900460ff166121185760405162461bcd60e51b81526004016109d2906126e3565b6111ad33611aa4565b82805461212d906126a8565b90600052602060002090601f01602090048101928261214f5760008555612195565b82601f106121685782800160ff19823516178555612195565b82800160010185558215612195579182015b8281111561219557823582559160200191906001019061217a565b506121a192915061221b565b5090565b5080546000825590600052602060002090810190610c6c919061221b565b828054828255906000526020600020908101928215612195579160200282018281111561219557823582559160200191906001019061217a565b5080546000825590600052602060002090810190610c6c9190612230565b5b808211156121a1576000815560010161221c565b808211156121a157600061224482826121a5565b50600101612230565b60006020828403121561225f57600080fd5b81356001600160a01b038116811461227657600080fd5b9392505050565b60006020828403121561228f57600080fd5b5035919050565b600080602083850312156122a957600080fd5b823567ffffffffffffffff808211156122c157600080fd5b818501915085601f8301126122d557600080fd5b8135818111156122e457600080fd5b8660208285010111156122f657600080fd5b60209290920196919550909350505050565b60008083601f84011261231a57600080fd5b50813567ffffffffffffffff81111561233257600080fd5b6020830191508360208260051b850101111561151157600080fd5b6000806020838503121561236057600080fd5b823567ffffffffffffffff81111561237757600080fd5b61238385828601612308565b90969095509350505050565b80356004811061239e57600080fd5b919050565b6000806000604084860312156123b857600080fd5b6123c18461238f565b9250602084013567ffffffffffffffff8111156123dd57600080fd5b6123e986828701612308565b9497909650939450505050565b80356006811061239e57600080fd5b6000806040838503121561241857600080fd5b612421836123f6565b946020939093013593505050565b6000806040838503121561244257600080fd5b50508035926020909101359150565b6000806040838503121561246457600080fd5b6124218361238f565b6020808252825182820181905260009190848201906040850190845b818110156124a557835183529284019291840191600101612489565b50909695505050505050565b600060208083528351808285015260005b818110156124de578581018301518582016040015282016124c2565b818111156124f0576000604083870101525b50601f01601f1916929092016040019392505050565b60008060006040848603121561251b57600080fd5b6123c1846123f6565b60006020828403121561253657600080fd5b612276826123f6565b60208082526026908201527f4442436f6e74726163743a2063616c6c6572206973206e6f7420746865206f7060408201526532b930ba37b960d11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156125c5576125c561259b565b5060010190565b634e487b7160e01b600052602160045260246000fd5b600082198211156125f5576125f561259b565b500190565b6020808252601c908201527f4442436f6e74726163743a206c656e677468206d69736d617463682e00000000604082015260600190565b6000828210156126435761264361259b565b500390565b634e487b7160e01b600052603160045260246000fd5b6000808335601e1984360301811261267557600080fd5b83018035915067ffffffffffffffff82111561269057600080fd5b6020019150600581901b360382131561151157600080fd5b600181811c908216806126bc57607f821691505b602082108114156126dd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561274057600080fd5b8151801515811461227657600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561277957600080fd5b825167ffffffffffffffff8082111561279157600080fd5b818501915085601f8301126127a557600080fd5b8151818111156127b7576127b7612750565b8060051b604051601f19603f830116810181811085821117156127dc576127dc612750565b6040529182528482019250838101850191888311156127fa57600080fd5b938501935b82851015612818578451845293850193928501926127ff565b9897505050505050505056fea26469706673582212208558ac219c48c8e6522bc2402d3a97f02efddfb2754ccf1669a643b47c576a4c64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106104545760003560e01c80638136673f11610241578063c2e30dd01161013b578063d547cfb7116100c3578063f46f16c211610087578063f46f16c214610954578063f6be71d114610967578063fa1785fe1461097a578063fce3b86e1461098d578063fd02f81f146109a057600080fd5b8063d547cfb7146108fe578063e707379014610913578063ec214bbf14610926578063f046bded14610939578063f2fde38b1461094157600080fd5b8063cd0a174a1161010a578063cd0a174a1461089d578063d2110a09146108bd578063d3f0f70d146108c5578063d3f42b7c146108d8578063d42ecfc0146108eb57600080fd5b8063c2e30dd014610851578063c6c0891614610864578063c7650dd814610877578063c8aca9d01461088a57600080fd5b8063aaa2b8c8116101c9578063b2cd99af1161018d578063b2cd99af146107dd578063b3a8f2a914610805578063b3ab15fb14610818578063b589e51e1461082b578063b95717211461083e57600080fd5b8063aaa2b8c814610788578063af4574c61461079b578063af718c55146107ae578063afe97ec1146107c1578063b0d54bcf146107ca57600080fd5b806399bcfdd31161021057806399bcfdd3146107335780639ba544ed146107465780639d51193e146107595780639e77de2714610762578063a5c158e31461077557600080fd5b80638136673f146106e95780638da5cb5b146106fc5780638edcde7d1461070d57806397610f301461072057600080fd5b806356f43352116103525780636b81ffdb116102da57806377b330c91161029e57806377b330c9146106805780637811dddd146106a75780637a58a3f1146106b05780637af35899146106c35780637bbbdc2e146106d657600080fd5b80636b81ffdb146106365780636fda065214610649578063705064fd1461065c578063715018a61461066f57806377b2fb8e1461067757600080fd5b80635f7d59c4116103215780635f7d59c4146105f6578063600a2f82146105ff5780636187b33e146106085780636241c2001461061b578063663d2c4e1461062357600080fd5b806356f43352146105b4578063570ca735146105bd5780635b487d9c146105d05780635ce58dd4146105e357600080fd5b8063331163ce116103e05780634d678f29116103a45780634d678f291461056a5780634eb66e831461057d578063530009641461058657806354af93201461058e57806356c15c39146105a157600080fd5b8063331163ce146105165780633b87436b1461051e57806341d0992b1461053157806343e573b1146105445780634b89f9f71461055757600080fd5b80631edd6e87116104275780631edd6e87146104c85780631faee868146104d05780632eed8a59146104d857806330176e13146104fb5780633256e7d41461050e57600080fd5b80630b00fd54146104595780630fb5a6b4146104895780631451952b146104a05780631b56c29c146104b5575b600080fd5b606d5461046c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61049260835481565b604051908152602001610480565b6104b36104ae36600461224d565b6109a8565b005b61046c6104c336600461227d565b610a64565b607454610492565b608254610492565b6104eb6104e636600461224d565b610a8e565b6040519015158152602001610480565b6104b3610509366004612296565b610af6565b607a54610492565b606f54610492565b60655461046c906001600160a01b031681565b6104b361053f36600461234d565b610b31565b6104b361055236600461224d565b610b9d565b6104b36105653660046123a3565b610c6f565b610492610578366004612405565b610e4f565b610492607d5481565b607854610492565b6104b361059c36600461234d565b610ed0565b606b5461046c906001600160a01b031681565b61049260765481565b606e5461046c906001600160a01b031681565b606a5461046c906001600160a01b031681565b6104b36105f136600461234d565b610f32565b61049260735481565b61049260705481565b61049261061636600461227d565b611025565b607954610492565b60695461046c906001600160a01b031681565b6104b361064436600461227d565b611046565b61049261065736600461227d565b611075565b6104b361066a36600461227d565b6110ad565b6104b361119b565b610492607b5481565b61046c7f000000000000000000000000000000000000000000000000000000000000000081565b61049260805481565b6104926106be36600461227d565b6111af565b6104b36106d136600461234d565b6111bf565b6104b36106e436600461234d565b61122b565b6104926106f736600461242f565b611347565b6033546001600160a01b031661046c565b61049261071b36600461227d565b611384565b60675461046c906001600160a01b031681565b61049261074136600461227d565b61138f565b6104b361075436600461227d565b61139f565b610492607f5481565b6104b361077036600461234d565b6113ce565b6104b361078336600461227d565b611430565b60775461046c906001600160a01b031681565b6104926107a936600461227d565b61145f565b6104926107bc36600461242f565b61146f565b61049260755481565b6104b36107d836600461227d565b61147f565b6107f06107eb366004612451565b6114ff565b60408051928352602083019190915201610480565b6104b361081336600461227d565b611518565b6104b361082636600461224d565b611547565b6104b361083936600461234d565b611571565b6104b361084c36600461234d565b6115d3565b60665461046c906001600160a01b031681565b6104b361087236600461227d565b61160b565b6104b361088536600461234d565b61163a565b61049261089836600461242f565b611717565b6108b06108ab36600461227d565b611733565b604051610480919061246d565b607c54610492565b6104eb6108d336600461227d565b6117fa565b6104926108e636600461227d565b611810565b6104b36108f936600461227d565b611820565b61090661184f565b60405161048091906124b1565b6104b3610921366004612506565b6118dd565b610492610934366004612524565b611966565b607254610492565b6104b361094f36600461224d565b611995565b606c5461046c906001600160a01b031681565b6104b361097536600461227d565b611a0b565b60685461046c906001600160a01b031681565b61049261099b36600461227d565b611a3a565b608154610492565b606e546001600160a01b031633146109db5760405162461bcd60e51b81526004016109d29061253f565b60405180910390fd5b6001600160a01b038116610a425760405162461bcd60e51b815260206004820152602860248201527f4442436f6e74726163743a20726f6f742063616e6e6f74206265207a65726f2060448201526730b2323932b9b99760c11b60648201526084016109d2565b607780546001600160a01b0319166001600160a01b0392909216919091179055565b60748181548110610a7457600080fd5b6000918252602090912001546001600160a01b0316905081565b607454600090815b81811015610aec5760748181548110610ab157610ab1612585565b6000918252602090912001546001600160a01b0385811691161415610ada575060019392505050565b80610ae4816125b1565b915050610a96565b5060009392505050565b606e546001600160a01b03163314610b205760405162461bcd60e51b81526004016109d29061253f565b610b2c60718383612121565b505050565b606e546001600160a01b03163314610b5b5760405162461bcd60e51b81526004016109d29061253f565b610b67600560016125e2565b8114610b855760405162461bcd60e51b81526004016109d2906125fa565b610b91607c60006121a5565b610b2c607c83836121c3565b606e546001600160a01b03163314610bc75760405162461bcd60e51b81526004016109d29061253f565b60745460005b81811015610c1e5760748181548110610be857610be8612585565b6000918252602090912001546001600160a01b0384811691161415610c0c57505050565b80610c16816125b1565b915050610bcd565b5050607480546001810182556000919091527f19a0b39aa25ac793b5f6e9a0534364cc0b3fd1ea9b651e79c7f50a59d48ef8130180546001600160a01b0319166001600160a01b0383161790555b50565b606e546001600160a01b03163314610c995760405162461bcd60e51b81526004016109d29061253f565b607254836003811115610cae57610cae6125cc565b1115610ccc5760405162461bcd60e51b81526004016109d2906125fa565b60005b81811015610d79578015610d67578282610cea600184612631565b818110610cf957610cf9612585565b90506020020135838383818110610d1257610d12612585565b905060200201351015610d675760405162461bcd60e51b815260206004820152601f60248201527f4442436f6e74726163743a20696e76616c6964207468726573686f6c64732e0060448201526064016109d2565b80610d71816125b1565b915050610ccf565b50826003811115610d8c57610d8c6125cc565b6072541415610dd85760728054600181018255600091909152610dd2907fdffbd64cc7c1a7eb27984335d9416d51137a03d3fabec7141025c62663253fe10183836121c3565b50505050565b6072836003811115610dec57610dec6125cc565b81548110610dfc57610dfc612585565b906000526020600020016000610e1291906121a5565b81816072856003811115610e2857610e286125cc565b81548110610e3857610e38612585565b906000526020600020019190610dd29291906121c3565b600081607e6000856005811115610e6857610e686125cc565b81526020810191909152604001600020541115610ec657607e6000846005811115610e9557610e956125cc565b81526020019081526020016000208281548110610eb457610eb4612585565b90600052602060002001549050610eca565b5060005b92915050565b606e546001600160a01b03163314610efa5760405162461bcd60e51b81526004016109d29061253f565b60058114610f1a5760405162461bcd60e51b81526004016109d2906125fa565b610f26607960006121a5565b610b2c607983836121c3565b606e546001600160a01b03163314610f5c5760405162461bcd60e51b81526004016109d29061253f565b610f68600560016125e2565b8114610f865760405162461bcd60e51b81526004016109d2906125fa565b610f92607a60006121a5565b60005b8181101561101857670de0b6b3a7640000838383818110610fb857610fb8612585565b9050602002013511156110065760405162461bcd60e51b8152602060048201526016602482015275222121b7b73a3930b1ba1d103a37b7903630b933b29760511b60448201526064016109d2565b80611010816125b1565b915050610f95565b50610b2c607a83836121c3565b606f818154811061103557600080fd5b600091825260209091200154905081565b606e546001600160a01b031633146110705760405162461bcd60e51b81526004016109d29061253f565b607b55565b6072546000908210611088576000610eca565b6072828154811061109b5761109b612585565b60009182526020909120015492915050565b606e546001600160a01b031633146110d75760405162461bcd60e51b81526004016109d29061253f565b6074546110e5600182612631565b8210156111645760746110f9600183612631565b8154811061110957611109612585565b600091825260209091200154607480546001600160a01b03909216918490811061113557611135612585565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b607480548061117557611175612648565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b6111a3611a4a565b6111ad6000611aa4565b565b607a818154811061103557600080fd5b606e546001600160a01b031633146111e95760405162461bcd60e51b81526004016109d29061253f565b6111f5600560016125e2565b81146112135760405162461bcd60e51b81526004016109d2906125fa565b61121f608160006121a5565b610b2c608183836121c3565b600054610100900460ff161580801561124b5750600054600160ff909116105b806112655750303b158015611265575060005460ff166001145b6112c85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109d2565b6000805460ff1916600117905580156112eb576000805461ff0019166101001790555b6112f583836115fd565b6112fd611af6565b8015610b2c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6072828154811061135757600080fd5b90600052602060002001818154811061136f57600080fd5b90600052602060002001600091509150505481565b6000610eca82611b25565b6078818154811061103557600080fd5b606e546001600160a01b031633146113c95760405162461bcd60e51b81526004016109d29061253f565b607f55565b606e546001600160a01b031633146113f85760405162461bcd60e51b81526004016109d29061253f565b600581146114185760405162461bcd60e51b81526004016109d2906125fa565b611424607860006121a5565b610b2c607883836121c3565b606e546001600160a01b0316331461145a5760405162461bcd60e51b81526004016109d29061253f565b607555565b6081818154811061103557600080fd5b6082828154811061135757600080fd5b606e546001600160a01b031633146114a95760405162461bcd60e51b81526004016109d29061253f565b670de0b6b3a76400008111156114fa5760405162461bcd60e51b8152602060048201526016602482015275222121b7b73a3930b1ba1d103a37b7903630b933b29760511b60448201526064016109d2565b607655565b60008061150c8484611cef565b915091505b9250929050565b606e546001600160a01b031633146115425760405162461bcd60e51b81526004016109d29061253f565b607055565b61154f611a4a565b606e80546001600160a01b0319166001600160a01b0392909216919091179055565b606e546001600160a01b0316331461159b5760405162461bcd60e51b81526004016109d29061253f565b600381146115bb5760405162461bcd60e51b81526004016109d2906125fa565b6115c7606f60006121a5565b610b2c606f83836121c3565b606e546001600160a01b031633146115fd5760405162461bcd60e51b81526004016109d29061253f565b6116078282611e06565b5050565b606e546001600160a01b031633146116355760405162461bcd60e51b81526004016109d29061253f565b607355565b606e546001600160a01b031633146116645760405162461bcd60e51b81526004016109d29061253f565b611670608260006121fd565b60005b81811015610b2c5782828281811061168d5761168d612585565b905060200281019061169f919061265e565b90506003146116c05760405162461bcd60e51b81526004016109d2906125fa565b60828383838181106116d4576116d4612585565b90506020028101906116e6919061265e565b825460018101845560009384526020909320611704930191906121c3565b508061170f816125b1565b915050611673565b607e602052816000526040600020818154811061136f57600080fd5b60825460609082106117875760405162461bcd60e51b815260206004820181905260248201527f4442436f6e74726163743a20696e646578206f7574206f6620626f756e64732e60448201526064016109d2565b6082828154811061179a5761179a612585565b906000526020600020018054806020026020016040519081016040528092919081815260200182805480156117ee57602002820191906000526020600020905b8154815260200190600101908083116117da575b50505050509050919050565b6000607f5461180883611b25565b101592915050565b6079818154811061103557600080fd5b606e546001600160a01b0316331461184a5760405162461bcd60e51b81526004016109d29061253f565b608055565b6071805461185c906126a8565b80601f0160208091040260200160405190810160405280929190818152602001828054611888906126a8565b80156118d55780601f106118aa576101008083540402835291602001916118d5565b820191906000526020600020905b8154815290600101906020018083116118b857829003601f168201915b505050505081565b606e546001600160a01b031633146119075760405162461bcd60e51b81526004016109d29061253f565b600083600581111561191b5761191b6125cc565b6000818152607e6020526040812091925061193691906121a5565b607d5482111561194657607d8290555b6000818152607e6020526040902061195f9084846121c3565b5050505050565b6000607e600083600581111561197e5761197e6125cc565b815260208101919091526040016000205492915050565b61199d611a4a565b6001600160a01b038116611a025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109d2565b610c6c81611aa4565b606e546001600160a01b03163314611a355760405162461bcd60e51b81526004016109d29061253f565b608355565b607c818154811061103557600080fd5b6033546001600160a01b031633146111ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109d2565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611b1d5760405162461bcd60e51b81526004016109d2906126e3565b6111ad6120f1565b606954604051634f558e7960e01b8152600481018390526000916001600160a01b031690634f558e799060240160206040518083038186803b158015611b6a57600080fd5b505afa158015611b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba2919061272e565b611bee5760405162461bcd60e51b815260206004820152601d60248201527f4442436f6e74726163743a20696e76616c696420746f6b656e2049442e00000060448201526064016109d2565b60695460405163373bf3af60e21b8152600481018490526000916001600160a01b03169063dcefcebc9060240160006040518083038186803b158015611c3357600080fd5b505afa158015611c47573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c6f9190810190612766565b905060005b611c80600360016125e2565b811015611ce8576000611cbd826003811115611c9e57611c9e6125cc565b848481518110611cb057611cb0612585565b6020026020010151611cef565b509050811580611ccc57508381105b15611cd5578093505b5080611ce0816125b1565b915050611c74565b5050919050565b600081816072856003811115611d0757611d076125cc565b81548110611d1757611d17612585565b600091825260208220015491505b81811015611dfd576072866003811115611d4157611d416125cc565b81548110611d5157611d51612585565b906000526020600020018181548110611d6c57611d6c612585565b90600052602060002001548510611de657611d888160016125e2565b93506072866003811115611d9e57611d9e6125cc565b81548110611dae57611dae612585565b906000526020600020018181548110611dc957611dc9612585565b906000526020600020015485611ddf9190612631565b9250611deb565b611dfd565b80611df5816125b1565b915050611d25565b50509250929050565b60098114611e655760405162461bcd60e51b815260206004820152602660248201527f4442436f6e74726163743a20616464726573736573206c656e677468206d697360448201526536b0ba31b41760d11b60648201526084016109d2565b81816000818110611e7857611e78612585565b9050602002016020810190611e8d919061224d565b606580546001600160a01b0319166001600160a01b039290921691909117905581816001818110611ec057611ec0612585565b9050602002016020810190611ed5919061224d565b606680546001600160a01b0319166001600160a01b039290921691909117905581816002818110611f0857611f08612585565b9050602002016020810190611f1d919061224d565b606780546001600160a01b0319166001600160a01b039290921691909117905581816003818110611f5057611f50612585565b9050602002016020810190611f65919061224d565b606980546001600160a01b0319166001600160a01b039290921691909117905581816004818110611f9857611f98612585565b9050602002016020810190611fad919061224d565b606a80546001600160a01b0319166001600160a01b039290921691909117905581816005818110611fe057611fe0612585565b9050602002016020810190611ff5919061224d565b606b80546001600160a01b0319166001600160a01b03929092169190911790558181600681811061202857612028612585565b905060200201602081019061203d919061224d565b606c80546001600160a01b0319166001600160a01b03929092169190911790558181600781811061207057612070612585565b9050602002016020810190612085919061224d565b606880546001600160a01b0319166001600160a01b0392909216919091179055818160088181106120b8576120b8612585565b90506020020160208101906120cd919061224d565b606d80546001600160a01b0319166001600160a01b03929092169190911790555050565b600054610100900460ff166121185760405162461bcd60e51b81526004016109d2906126e3565b6111ad33611aa4565b82805461212d906126a8565b90600052602060002090601f01602090048101928261214f5760008555612195565b82601f106121685782800160ff19823516178555612195565b82800160010185558215612195579182015b8281111561219557823582559160200191906001019061217a565b506121a192915061221b565b5090565b5080546000825590600052602060002090810190610c6c919061221b565b828054828255906000526020600020908101928215612195579160200282018281111561219557823582559160200191906001019061217a565b5080546000825590600052602060002090810190610c6c9190612230565b5b808211156121a1576000815560010161221c565b808211156121a157600061224482826121a5565b50600101612230565b60006020828403121561225f57600080fd5b81356001600160a01b038116811461227657600080fd5b9392505050565b60006020828403121561228f57600080fd5b5035919050565b600080602083850312156122a957600080fd5b823567ffffffffffffffff808211156122c157600080fd5b818501915085601f8301126122d557600080fd5b8135818111156122e457600080fd5b8660208285010111156122f657600080fd5b60209290920196919550909350505050565b60008083601f84011261231a57600080fd5b50813567ffffffffffffffff81111561233257600080fd5b6020830191508360208260051b850101111561151157600080fd5b6000806020838503121561236057600080fd5b823567ffffffffffffffff81111561237757600080fd5b61238385828601612308565b90969095509350505050565b80356004811061239e57600080fd5b919050565b6000806000604084860312156123b857600080fd5b6123c18461238f565b9250602084013567ffffffffffffffff8111156123dd57600080fd5b6123e986828701612308565b9497909650939450505050565b80356006811061239e57600080fd5b6000806040838503121561241857600080fd5b612421836123f6565b946020939093013593505050565b6000806040838503121561244257600080fd5b50508035926020909101359150565b6000806040838503121561246457600080fd5b6124218361238f565b6020808252825182820181905260009190848201906040850190845b818110156124a557835183529284019291840191600101612489565b50909695505050505050565b600060208083528351808285015260005b818110156124de578581018301518582016040015282016124c2565b818111156124f0576000604083870101525b50601f01601f1916929092016040019392505050565b60008060006040848603121561251b57600080fd5b6123c1846123f6565b60006020828403121561253657600080fd5b612276826123f6565b60208082526026908201527f4442436f6e74726163743a2063616c6c6572206973206e6f7420746865206f7060408201526532b930ba37b960d11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156125c5576125c561259b565b5060010190565b634e487b7160e01b600052602160045260246000fd5b600082198211156125f5576125f561259b565b500190565b6020808252601c908201527f4442436f6e74726163743a206c656e677468206d69736d617463682e00000000604082015260600190565b6000828210156126435761264361259b565b500390565b634e487b7160e01b600052603160045260246000fd5b6000808335601e1984360301811261267557600080fd5b83018035915067ffffffffffffffff82111561269057600080fd5b6020019150600581901b360382131561151157600080fd5b600181811c908216806126bc57607f821691505b602082108114156126dd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561274057600080fd5b8151801515811461227657600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561277957600080fd5b825167ffffffffffffffff8082111561279157600080fd5b818501915085601f8301126127a557600080fd5b8151818111156127b7576127b7612750565b8060051b604051601f19603f830116810181811085821117156127dc576127dc612750565b6040529182528482019250838101850191888311156127fa57600080fd5b938501935b82851015612818578451845293850193928501926127ff565b9897505050505050505056fea26469706673582212208558ac219c48c8e6522bc2402d3a97f02efddfb2754ccf1669a643b47c576a4c64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setAttributeLevelThreshold(uint8,uint256[])": {
        "notice": "CA: [100, 500, 1000 ... ]"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 138,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 141,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3230,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 4136,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "LYNK_TOKEN",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 4138,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "AP_TOKEN",
        "offset": 0,
        "slot": "102",
        "type": "t_address"
      },
      {
        "astId": 4140,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "STAKING",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      },
      {
        "astId": 4142,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "USER_INFO",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      },
      {
        "astId": 4144,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "LYNKNFT",
        "offset": 0,
        "slot": "105",
        "type": "t_address"
      },
      {
        "astId": 4146,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "STAKING_LYNKNFT",
        "offset": 0,
        "slot": "106",
        "type": "t_address"
      },
      {
        "astId": 4148,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "LISTED_LYNKNFT",
        "offset": 0,
        "slot": "107",
        "type": "t_address"
      },
      {
        "astId": 4150,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "MARKET",
        "offset": 0,
        "slot": "108",
        "type": "t_address"
      },
      {
        "astId": 4152,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "TEAM_ADDR",
        "offset": 0,
        "slot": "109",
        "type": "t_address"
      },
      {
        "astId": 4154,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "operator",
        "offset": 0,
        "slot": "110",
        "type": "t_address"
      },
      {
        "astId": 4157,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "mintPrices",
        "offset": 0,
        "slot": "111",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 4159,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "maxMintPerDayPerAddress",
        "offset": 0,
        "slot": "112",
        "type": "t_uint256"
      },
      {
        "astId": 4161,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "baseTokenURI",
        "offset": 0,
        "slot": "113",
        "type": "t_string_storage"
      },
      {
        "astId": 4165,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "attributeLevelThreshold",
        "offset": 0,
        "slot": "114",
        "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage"
      },
      {
        "astId": 4167,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "maxVAAddPerDayPerToken",
        "offset": 0,
        "slot": "115",
        "type": "t_uint256"
      },
      {
        "astId": 4170,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "acceptTokens",
        "offset": 0,
        "slot": "116",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4172,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "sellingLevelLimit",
        "offset": 0,
        "slot": "117",
        "type": "t_uint256"
      },
      {
        "astId": 4174,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "tradingFee",
        "offset": 0,
        "slot": "118",
        "type": "t_uint256"
      },
      {
        "astId": 4176,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "rootAddress",
        "offset": 0,
        "slot": "119",
        "type": "t_address"
      },
      {
        "astId": 4179,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "directRequirements",
        "offset": 0,
        "slot": "120",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 4182,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "performanceRequirements",
        "offset": 0,
        "slot": "121",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 4185,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "socialRewardRates",
        "offset": 0,
        "slot": "122",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 4187,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "contributionRewardThreshold",
        "offset": 0,
        "slot": "123",
        "type": "t_uint256"
      },
      {
        "astId": 4190,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "contributionRewardAmounts",
        "offset": 0,
        "slot": "124",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 4192,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "maxInvitationLevel",
        "offset": 0,
        "slot": "125",
        "type": "t_uint256"
      },
      {
        "astId": 4197,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "communityRewardRates",
        "offset": 0,
        "slot": "126",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 4199,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "achievementRewardLevelThreshold",
        "offset": 0,
        "slot": "127",
        "type": "t_uint256"
      },
      {
        "astId": 4201,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "achievementRewardDurationThreshold",
        "offset": 0,
        "slot": "128",
        "type": "t_uint256"
      },
      {
        "astId": 4204,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "achievementRewardAmounts",
        "offset": 0,
        "slot": "129",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 4208,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "sellingPackages",
        "offset": 0,
        "slot": "130",
        "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage"
      },
      {
        "astId": 4210,
        "contract": "contracts/DBContract.sol:DBContract",
        "label": "duration",
        "offset": 0,
        "slot": "131",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
        "base": "t_array(t_uint256)dyn_storage",
        "encoding": "dynamic_array",
        "label": "uint256[][]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}